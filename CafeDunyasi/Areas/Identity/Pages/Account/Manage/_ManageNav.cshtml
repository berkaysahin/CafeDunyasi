@inject SignInManager<Users> SignInManager
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index" style="color: white">@localizer["Profile"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email" style="color: white">@localizer["Email"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword" style="color: white">@localizer["Password"]</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins" style="color: white">@localizer["ExternalLogins"]</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.ActivateBusinessAccountNavClass(ViewContext)" id="activate-business-account" asp-page="./ActivateBusinessAccount" style="color: white">@localizer["BusinessAccount"]</a></li>
</ul>